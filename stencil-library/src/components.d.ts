/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface LinkComponent {
        "href": string;
        "name": string;
    }
    interface NavbarComponent {
        "home": string;
        "items": { name: string, goto: string }[];
        "sidebarIconSize": string;
        "styles": { [key: string]: string };
    }
    interface NavbarItem {
        "goto": string;
        "name": string;
    }
    interface SidebarButton {
        "iconSize": string;
    }
    interface SidebarComponent {
        "items": { name: string, goto: string }[];
        "styles": { [key: string]: string };
    }
    interface SidebarIcon {
        "iconSize": string;
    }
}
export interface SidebarButtonCustomEvent<T> extends CustomEvent<T> {
    detail: T;
    target: HTMLSidebarButtonElement;
}
declare global {
    interface HTMLLinkComponentElement extends Components.LinkComponent, HTMLStencilElement {
    }
    var HTMLLinkComponentElement: {
        prototype: HTMLLinkComponentElement;
        new (): HTMLLinkComponentElement;
    };
    interface HTMLNavbarComponentElement extends Components.NavbarComponent, HTMLStencilElement {
    }
    var HTMLNavbarComponentElement: {
        prototype: HTMLNavbarComponentElement;
        new (): HTMLNavbarComponentElement;
    };
    interface HTMLNavbarItemElement extends Components.NavbarItem, HTMLStencilElement {
    }
    var HTMLNavbarItemElement: {
        prototype: HTMLNavbarItemElement;
        new (): HTMLNavbarItemElement;
    };
    interface HTMLSidebarButtonElement extends Components.SidebarButton, HTMLStencilElement {
    }
    var HTMLSidebarButtonElement: {
        prototype: HTMLSidebarButtonElement;
        new (): HTMLSidebarButtonElement;
    };
    interface HTMLSidebarComponentElement extends Components.SidebarComponent, HTMLStencilElement {
    }
    var HTMLSidebarComponentElement: {
        prototype: HTMLSidebarComponentElement;
        new (): HTMLSidebarComponentElement;
    };
    interface HTMLSidebarIconElement extends Components.SidebarIcon, HTMLStencilElement {
    }
    var HTMLSidebarIconElement: {
        prototype: HTMLSidebarIconElement;
        new (): HTMLSidebarIconElement;
    };
    interface HTMLElementTagNameMap {
        "link-component": HTMLLinkComponentElement;
        "navbar-component": HTMLNavbarComponentElement;
        "navbar-item": HTMLNavbarItemElement;
        "sidebar-button": HTMLSidebarButtonElement;
        "sidebar-component": HTMLSidebarComponentElement;
        "sidebar-icon": HTMLSidebarIconElement;
    }
}
declare namespace LocalJSX {
    interface LinkComponent {
        "href"?: string;
        "name"?: string;
    }
    interface NavbarComponent {
        "home"?: string;
        "items"?: { name: string, goto: string }[];
        "sidebarIconSize"?: string;
        "styles"?: { [key: string]: string };
    }
    interface NavbarItem {
        "goto"?: string;
        "name"?: string;
    }
    interface SidebarButton {
        "iconSize"?: string;
        "onIsOpenEvent"?: (event: SidebarButtonCustomEvent<boolean>) => void;
    }
    interface SidebarComponent {
        "items"?: { name: string, goto: string }[];
        "styles"?: { [key: string]: string };
    }
    interface SidebarIcon {
        "iconSize"?: string;
    }
    interface IntrinsicElements {
        "link-component": LinkComponent;
        "navbar-component": NavbarComponent;
        "navbar-item": NavbarItem;
        "sidebar-button": SidebarButton;
        "sidebar-component": SidebarComponent;
        "sidebar-icon": SidebarIcon;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "link-component": LocalJSX.LinkComponent & JSXBase.HTMLAttributes<HTMLLinkComponentElement>;
            "navbar-component": LocalJSX.NavbarComponent & JSXBase.HTMLAttributes<HTMLNavbarComponentElement>;
            "navbar-item": LocalJSX.NavbarItem & JSXBase.HTMLAttributes<HTMLNavbarItemElement>;
            "sidebar-button": LocalJSX.SidebarButton & JSXBase.HTMLAttributes<HTMLSidebarButtonElement>;
            "sidebar-component": LocalJSX.SidebarComponent & JSXBase.HTMLAttributes<HTMLSidebarComponentElement>;
            "sidebar-icon": LocalJSX.SidebarIcon & JSXBase.HTMLAttributes<HTMLSidebarIconElement>;
        }
    }
}
